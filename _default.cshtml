@inherits Custom.Hybrid.Razor14

<div @Edit.TagToolbar()>
    <h1>
        System Types
    </h1>
    <div>
        this app manages all core data types which we'll distribute from now on...
    </div>

    <div>
        Click here 
        @Edit.Toolbar(actions: "app", settings: new { hover = "none", show = "always" }) 
        to manage the app. In there, export the types in the export UI (go to debug-mode)
    </div>
</div>
<hr>

@{
  var exports = AsList(App.Data["üßë‚ÄçüíªSystemExportConfiguration"]);
}
<h2>Export Bundles (@exports.Count())</h2>
@foreach (var export in exports)
{
  var exportMarkers = export.Parents("SystemExportDecorator");
  <div>
    <h3 @Kit.Toolbar.Default(export)>
      @export.Name (@exportMarkers.Count)
    </h3>
    <ul>
      <li>File Name: @export.FileName</li>
      <li>Preserve Markers: @export.PreserveMarkers</li>
      <li><a href="/api/2sxc/admin/type/JsonBundleExport?appId=@(App.AppId)&exportConfiguration=@export.EntityGuid" target="_blank">download</a></li>
    </ul>
    <h4>Contents</h4>
    <ol>
      @foreach (var marker in exportMarkers)
      {
        var markerEntity = AsEntity(marker);
        var target = markerEntity.MetadataFor;
        var tType = target.TargetType;
        var tTypeName = tType == 4 ? "Entity" : tType == 5 ? "ContentType" : "Unknown";
        string targetTitle = "unknown";
        string targetIdentifier = "unknown";
        if (tType == 5) {
          var ct = App.AppState.GetContentType(target.KeyString);
          targetTitle = ct.Name;
          targetIdentifier = ct.NameId;
          targetIdentifier = (ct.NameId == targetTitle) ? "" : "(" + ct.NameId + ")";
        }

        <li>@tTypeName: @targetTitle @targetIdentifier</li>
      }
    </ol>
  </div>
  <hr>
}
